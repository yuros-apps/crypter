#!/bin/bash

## GENERAL METHOD

yuros_cryto_head() {
clear 
echo '
   ____________  ______  ________________ 
  / ____/ __ \ \/ / __ \/_  __/ ____/ __ \
 / /   / /_/ /\  / /_/ / / / / __/ / /_/ /
/ /___/ _, _/ / / ____/ / / / /___/ _, _/ 
\____/_/ |_| /_/_/     /_/ /_____/_/ |_|  

Development by null@2024 - yuros sectools'
}


## params : 
## 		1. $1 = volume

yuros_crypto_chek() {

	if [[ -z $1 ]];then
		echo "error, volume variable is null."
		exit;
	fi
}

## params : 
## 		1. $1 = usrdir
yuros_crypto_accs() {
	sudo chown -R $USER:$USER $1 &&
	sudo chmod -R 700 $1
	if [[ -d $1/lost+found ]];then
		rm -fr $1/lost+found
	fi
}


## params : 
## 		1. $1 = volume
## 		2. $2 = mapper
## 		3. $3 = usrdir
yuros_crypto_udir() {
	echo ""
	echo "---------------------------------------------"
	sudo cryptsetup luksOpen /dev/$1 $2 && 
	sleep 2 
	if [[ ! -d $3 ]];then
		sudo mkdir $3 
	fi
	sudo mount /dev/mapper/$2 $3 &&
	sleep 1
}


yuros_crypto_desc() {
	echo "---------------------------------------------"
	echo " $1"
	echo ""
}


yuros_crypto_stat() {
	echo "    ---> $1"
}


yuros_crypto_stop() {
	echo ""
	echo " $1"
	echo "---------------------------------------------"
	echo ""
}


## params : 
## 		1. $1 = usrdir
## 		1. $2 = mapper
yuros_crypto_umnt() {
	sudo umount $1 &&
	yuros_crypto_desc "Ecnrypt crypto volume" &&
	sleep 2
	yuros_crypto_stat "paritition is umounted" 
	sudo cryptsetup luksClose /dev/mapper/$2 &&
	sleep 1
	yuros_crypto_stat "partition is locked"
	sudo rm -fr $1
	yuros_crypto_stat "user directory clean"
	yuros_crypto_stop "Crypto volume encrypted"
}


## CRYPTO MOUNTER
yuros_crypto_keys() {
	volume="sda3"
	mapper="crypt_keys"
	usrdir="$HOME/.local/cryptkeys"
	valdir=( "gpg" "ssh" "dbx" "ssl" "rec" )

	yuros_crypto_chek $volume &&
	yuros_cryto_head && 
	
	if [[ $(mountpoint -qd $usrdir) ]];then
		yuros_crypto_umnt $usrdir $mapper &&
		rm -fr /home/$USER/.ssh
	else
		yuros_crypto_udir $volume $mapper $usrdir &&
		yuros_crypto_desc "Decrypt keys crypto volume" &&
		for dir in "${valdir[@]}"
		do
			if [[ ! -d $usrdir/$dir ]]; then
				sudo mkdir $usrdir/$dir
			fi
			yuros_crypto_stat "$dir directory is ready"
		done
		yuros_crypto_accs $usrdir $mapper;
		if [[ -d /home/$USER/.ssh ]];then
			rm -fr $HOME/.ssh
		fi
		ln -s $usrdir/ssh /home/$USER/.ssh
		yuros_crypto_stat "ssh directory sync"
		yuros_crypto_stop "Keys crypto volume is ready"
	fi
}


yuros_crypto_devs() {
	volume="sda2"
	mapper="crypt_devs"
	usrdir="$HOME/.local/cryptapp"
	valdir=( "webbase" "android" "iphone" "linux" "windows" )

	yuros_crypto_chek $volume &&
	yuros_cryto_head && 
	
	if [[ $(mountpoint -qd $usrdir) ]];then
		yuros_crypto_umnt $usrdir $mapper
		rm -fr ~/devel
	else
		yuros_crypto_udir $volume $mapper $usrdir &&
		yuros_crypto_desc "Decrypt file crypto volume" &&
		for dir in "${valdir[@]}"
		do
			if [[ ! -d $usrdir/$dir ]]; then
				sudo mkdir $usrdir/$dir
			fi
			yuros_crypto_stat "$dir directory is ready"
		done
		yuros_crypto_accs $usrdir $mapper;
		ln -sf $usrdir ~/devel
		yuros_crypto_stop "File crypto directory ready"
	fi
}


yuros_crypto_data() {
	volume="sda2"
	mapper="crypt_data"
	usrdir="$HOME/.local/cryptdat"
	valdir=( "private" "family" "lectore" "lektorid" "ropeaccess" "lektorco" "datamaster" "uinjkt" )

	yuros_crypto_chek $volume &&
	yuros_cryto_head && 
	
	if [[ $(mountpoint -qd $usrdir) ]];then
		yuros_crypto_umnt $usrdir $mapper
		rm -fr ~/datum
	else
		yuros_crypto_udir $volume $mapper $usrdir &&
		yuros_crypto_desc "Decrypt file crypto volume" &&
		for dir in "${valdir[@]}"
		do
			if [[ ! -d $usrdir/$dir ]]; then
				sudo mkdir $usrdir/$dir
			fi
			yuros_crypto_stat "$dir directory is ready"
		done
		yuros_crypto_accs $usrdir $mapper;
		ln -sf $usrdir ~/datum
		yuros_crypto_stop "File crypto directory ready"
	fi
}


yuros_crypto_game() {
	volume="sda2"
	mapper="crypt_game"
	usrdir="$HOME/.local/cryptjoy"
	valdir=( "steam" "ubisoft" "epic" "ninwii" "switch" "ps2")

	yuros_crypto_chek $volume &&
	yuros_cryto_head && 
	
	if [[ $(mountpoint -qd $usrdir) ]];then
		yuros_crypto_umnt $usrdir $mapper
	else
		yuros_crypto_udir $volume $mapper $usrdir &&
		yuros_crypto_desc "Decrypt file crypto volume" &&
		for dir in "${valdir[@]}"
		do
			if [[ ! -d $usrdir/$dir ]]; then
				sudo mkdir $usrdir/$dir
			fi
			yuros_crypto_stat "$dir directory is ready"
		done
		yuros_crypto_accs $usrdir $mapper;
		yuros_crypto_stop "File crypto directory ready"
	fi
}


yuros_crypto_virt() {

	volume="sda2"
	mapper="crypt_virt"
	usrdir="$HOME/.local/cryptvir"
	valdir=( "testing" "production" "proto" "yuvirt" )

	yuros_crypto_chek $volume &&
	yuros_cryto_head && 
	
	if [[ $(mountpoint -qd $usrdir) ]];then
		yuros_crypto_umnt $usrdir $mapper
		rm -fr ~/vmhost
	else
		yuros_crypto_udir $volume $mapper $usrdir &&
		yuros_crypto_desc "Decrypt file crypto volume" &&
		for dir in "${valdir[@]}"
		do
			if [[ ! -d $usrdir/$dir ]]; then
				sudo mkdir $usrdir/$dir
			fi
			yuros_crypto_stat "$dir directory is ready"
		done
		yuros_crypto_accs $usrdir $mapper
		ln -fs $usrdir/yuvirt ~/vmhost
		yuros_crypto_stop "File crypto directory ready"
	fi
}


yuros_crypto_pods() {
	echo "currently not available"
}


yuros_crypto_dock() {

	volume="sda2"
	mapper="crypt_dock"
	usrdir="/var/lib/docker"
	valdir=( "containers" "images" "image" "volumes" )

	yuros_crypto_chek $volume &&
	yuros_cryto_head && 
	
	if [[ $(mountpoint -qd /run/media/$USER/docker/) ]];then
		for dir in "${valdir[@]}"
		do
			if [[  $(mountpoint -qd /var/lib/docker/$dir ) ]]; then
				sudo umount /var/lib/docker/$dir &&
				sleep 1 &&
				yuros_crypto_stat "$dir docker is unmounted"
			fi
		done
		sudo umount /run/media/$USER/docker &&
		sleep 1 &&
		sudo cryptsetup luksClose /dev/mapper/$mapper &&
		sleep 2 &&
		sudo rm -fr /run/media/$USER/docker
	else
		sudo cryptsetup luksOpen /dev/$volume $mapper &&
		sleep 2 &&

		if [[ ! -d /run/media/$USER ]];then 
			sudo mkdir /run/media/$USER
		fi
		sleep 2 &&

		if [[ ! -d /run/media/$USER/docker/ ]];then 
			sudo mkdir /run/media/$USER/docker
		fi
		sleep 2 &&

		sudo mount /dev/mapper/$mapper /run/media/$USER/docker &&

		yuros_crypto_desc "Decrypt file crypto volume" &&
		for dir in "${valdir[@]}"
		do
			if [[ ! -d /run/media/$USER/docker/$dir ]]; then
				sudo mkdir /run/media/$USER/docker/$dir
			fi

			if [[ -d /run/media/$USER/docker/$dir ]];then
				sudo mount --bind /run/media/$USER/docker/$dir /var/lib/docker/$dir &&
				yuros_crypto_stat "$dir directory is ready"
			else
				yuros_crypto_stat "$dir directory not found"
			fi
		done
		yuros_crypto_accs $usrdir $mapper
		yuros_crypto_stop "Docker crypto directory ready"
	fi
}